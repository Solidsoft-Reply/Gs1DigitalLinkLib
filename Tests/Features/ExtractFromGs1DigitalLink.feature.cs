// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Gs1DigitalLinkToolkitTests.Features
{
    using Reqnroll;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class ExtractFromGs1DigitalLinkFeature : object, Xunit.IClassFixture<ExtractFromGs1DigitalLinkFeature.FixtureData>, Xunit.IAsyncLifetime
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "ExtractFromGs1DigitalLink", "A short summary of the feature", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "ExtractFromGs1DigitalLink.feature"
#line hidden
        
        public ExtractFromGs1DigitalLinkFeature(ExtractFromGs1DigitalLinkFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
        }
        
        public static async System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        public static async System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        public async System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
            {
                await testRunner.OnFeatureEndAsync();
            }
            if ((testRunner.FeatureContext == null))
            {
                await testRunner.OnFeatureStartAsync(featureInfo);
            }
        }
        
        public async System.Threading.Tasks.Task TestTearDownAsync()
        {
            await testRunner.OnScenarioEndAsync();
            global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public async System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        async System.Threading.Tasks.Task Xunit.IAsyncLifetime.InitializeAsync()
        {
            await this.TestInitializeAsync();
        }
        
        async System.Threading.Tasks.Task Xunit.IAsyncLifetime.DisposeAsync()
        {
            await this.TestTearDownAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a Digital Link")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a Digital Link")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/00/998440410914660971", "00", "998440410914660971", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013", "01", "05412345000013", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/22/AJY3095721P49", "01", "05412345000013", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/22/AJY3095721P49/10/ABC123", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/22/AJY3095721P49/10/ABC123/21/72292641703", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/22/AJY3095721P49/21/72292641703", "01", "05412345000013", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/10/ABC123", "01", "05412345000013", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/10/ABC123/21/72292641703", "01", "05412345000013", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/21/72292641703", "01", "05412345000013", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/401/0541234537290A41%26GHpp33", "401", "0541234537290A41&GHpp33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/402/21173492661712079", "402", "21173492661712079", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/410/5060917510004", "410", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/411/5060917510004", "411", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/412/5060917510004", "412", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/413/5060917510004", "413", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/414/5060917510004", "414", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/414/5060917510004/254/RP56J920471", "414", "5060917510004", "254", "RP56J920471", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/414/5060917510004/7040/5KFX", "414", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/415/5060917510004", "415", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/416/5060917510004", "416", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/417/5060917510004", "417", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/417/5060917510004/7040/5KFX", "417", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8003/04965031954585", "8003", "04965031954585", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8004/0541234537290A41%26GHpp33", "8004", "0541234537290A41&GHpp33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8004/0541234537290A41%26GHpp33/7040/5BVR", "8004", "0541234537290A41&GHpp33", "7040", "5BVR", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201", "8006", "054123450000130201", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/10/ABC123", "8006", "054123450000130201", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/10/ABC123/21/72292641703", "8006", "054123450000130201", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/21/72292641703", "8006", "054123450000130201", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/22/AJY3095721P49", "8006", "054123450000130201", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/22/AJY3095721P49/10/ABC123", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/22/AJY3095721P49/10/ABC123/21/72292641" +
            "703", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/22/AJY3095721P49/21/72292641703", "8006", "054123450000130201", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8010/0541234537290A41%23GH33", "8010", "0541234537290A41#GH33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8010/0541234537290A41%23GH33/8011/6639047221", "8010", "0541234537290A41#GH33", "8011", "6639047221", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8013/12345678901234FF", "8013", "12345678901234FF", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8017/817019610850151481", "8017", "817019610850151481", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8017/817019610850151481/8019/4003812", "8017", "817019610850151481", "8019", "4003812", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8018/411369833821910265", "8018", "411369833821910265", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8018/411369833821910265/8019/4003812", "8018", "411369833821910265", "8019", "4003812", "", "", "", "", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromADigitalLink(string digitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("digitalLink", digitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a Digital Link", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 6
    await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", digitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 7
    await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table58 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table58.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table58.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table58.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table58.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 8
    await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table58, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a Digital Link with short names")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a Digital Link with short names")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/sscc/998440410914660971", "00", "998440410914660971", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013", "01", "05412345000013", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/cpv/AJY3095721P49", "01", "05412345000013", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/cpv/AJY3095721P49/lot/ABC123", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/cpv/AJY3095721P49/lot/ABC123/ser/722926417" +
            "03", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/cpv/AJY3095721P49/ser/72292641703", "01", "05412345000013", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/lot/ABC123", "01", "05412345000013", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/lot/ABC123/ser/72292641703", "01", "05412345000013", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/ser/72292641703", "01", "05412345000013", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/ginc/0541234537290A41%26GHpp33", "401", "0541234537290A41&GHpp33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsin/21173492661712079", "402", "21173492661712079", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/shipTo/5060917510004", "410", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/billTo/5060917510004", "411", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/purchasedFrom/5060917510004", "412", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/shipFor/5060917510004", "413", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gln/5060917510004", "414", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gln/5060917510004/7040/5KFX", "414", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gln/5060917510004/glnx/RP56J920471", "414", "5060917510004", "254", "RP56J920471", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/payTo/5060917510004", "415", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/glnProd/5060917510004", "416", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/party/5060917510004", "417", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/party/5060917510004/7040/5KFX", "417", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/grai/04965031954585", "8003", "04965031954585", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/giai/0541234537290A41%26GHpp33/7040/5BVR", "8004", "0541234537290A41&GHpp33", "7040", "5BVR", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201", "8006", "054123450000130201", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/cpv/AJY3095721P49", "8006", "054123450000130201", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/cpv/AJY3095721P49/lot/ABC123", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/cpv/AJY3095721P49/lot/ABC123/ser/72292" +
            "641703", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/cpv/AJY3095721P49/ser/72292641703", "8006", "054123450000130201", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/lot/ABC123", "8006", "054123450000130201", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/lot/ABC123/ser/72292641703", "8006", "054123450000130201", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/ser/72292641703", "8006", "054123450000130201", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gmn/12345678901234FF", "8013", "12345678901234FF", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrnp/817019610850151481", "8017", "817019610850151481", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrnp/817019610850151481/srin/4003812", "8017", "817019610850151481", "8019", "4003812", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrn/411369833821910265", "8018", "411369833821910265", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrn/411369833821910265/srin/4003812", "8018", "411369833821910265", "8019", "4003812", "", "", "", "", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromADigitalLinkWithShortNames(string digitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("digitalLink", digitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a Digital Link with short names", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 58
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 59
    await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", digitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 60
    await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table59 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table59.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table59.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table59.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table59.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 61
    await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table59, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a compressed Digital Link")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a compressed Digital Link")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AN2yxDhfaiaw", "00", "998440410914660971", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmg", "01", "05412345000013", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JG", "01", "05412345000013", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JGQhcNT6K6c", "01", "05412345000013", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JGQhcNT6K6cibQCWN9Pee9tT-PQ", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JGRNoBLG-nvPe2p_Ho", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmkax7ipGrOHDPC5YNI8hMz", "01", "05412345000013", "235", "8TFV883a904GH&3", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmkIXDU-iun", "01", "05412345000013", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmkIXDU-iunIm0AljfT3nvbU_j0", "01", "05412345000013", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmkTaASxvp7z3tqfx6", "01", "05412345000013", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/JTLIetaiHYA", "253", "3060077601309", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/JVUqG5hJ5wA", "255", "5678409730535", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QBl2DVoxZM2jVm3ZOWEFoxTR5HDgzZg", "401", "0541234537290A41&GHpp33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QCJZyW9mC6Z4", "402", "21173492661712079", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QQSaVjC_dA", "410", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QRSaVjC_dA", "411", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QSSaVjC_dA", "412", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QTSaVjC_dA", "413", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QUSaVjC_dA", "414", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/JUa0T-eifdtOO9UFEmlYwv3Q", "414", "5060917510004", "254", "RP56J920471", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QUSaVjC_dHBAVlCrg", "414", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QVSaVjC_dA", "415", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QWSaVjC_dA", "416", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QXSaVjC_dA", "417", "5060917510004", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/QXSaVjC_dHBAVlCrg", "417", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/cEB2CqjAAkuwatGLJm0as27JywgtGKaPI4cGbM", "8004", "0541234537290A41&GHpp33", "7040", "7BVR", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/EEarwSMhC4an0V05E2gEsb6e897an8ewAMGAkftmjYEy", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/EEarwSMhC4an0V08ADBgJH7Zo2BMg", "8006", "054123450000130201", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/EEarwSMibQCWN9Pee9tT-PYAGDASP2zRsCZ", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/EEarwSOABgwEj9s0bAmQ", "8006", "054123450000130201", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gAMJCAXukTMA", "8003", "04965031954585", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gASXYNWjFkzaNWbdk5YQWjFNHkcODNm", "8004", "0541234537290A41&GHpp33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gAYMBI_bNGwJk", "8006", "054123450000130201", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/Im0AljfT3nvbU_j2ABgwEj9s0bAmQ", "8006", "054123450000130201", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/IQuGp9FdORNoBLG-nvPe2p_HsADBgJH7Zo2BMg", "8006", "054123450000130201", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/IQuGp9FdPAAwYCR-2aNgTI", "8006", "054123450000130201", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBCVYNWjFkzaNWbdk5YQWjFHHkM2cAI0xdvpGo", "8010", "0541234537290A41#GH33", "8011", "6639047221", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBCVYNWjFkzaNWbdk5YQWjFHHkM2Y", "8010", "0541234537290A41#GH33", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBNQEjRWeJASNP8", "8013", "12345678901234FF", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBe1ajAd9ATDk", "8017", "817019610850151481", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBe1ajAd9ATDmAGXPRfk", "8017", "817019610850151481", "8019", "4003812", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBhbV6rzBENPk", "8018", "411369833821910265", "", "", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gBhbV6rzBENPmAGXPRfk", "8018", "411369833821910265", "8019", "4003812", "", "", "", "", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromACompressedDigitalLink(string compressedDigitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("compressedDigitalLink", compressedDigitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a compressed Digital Link", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 108
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 109
        await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", compressedDigitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 110
        await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table60 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table60.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table60.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table60.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table60.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 111
        await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table60, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a partially compressed Digital Link")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a partially compressed Digital Link")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSM", "01", "05412345000013", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSMhC4an0V04", "01", "05412345000013", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSMhC4an0V05E2gEsb6e897an8eg", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSMibQCWN9Pee9tT-PQ", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/I1j3FSNWcOGeFywaR5CZm", "01", "05412345000013", "235", "8TFV883a904GH&3", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/Im0AljfT3nvbU_j0", "01", "05412345000013", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/IQuGp9FdO", "01", "05412345000013", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/IQuGp9FdORNoBLG-nvPe2p_Ho", "01", "05412345000013", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/414/5060917510004/cEBWUKu", "414", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/414/5060917510004/JUa0T-eifdtOO9Q", "414", "5060917510004", "254", "RP56J920471", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/417/5060917510004/cEBWUKu", "417", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8004/0541234537290A41%26GHpp33/cEB2Cqi", "8004", "0541234537290A41&GHpp33", "7040", "7BVR", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/EEarwSM", "8006", "054123450000130201", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/EEarwSMhC4an0V04", "8006", "054123450000130201", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/EEarwSMhC4an0V05E2gEsb6e897an8eg", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/EEarwSMibQCWN9Pee9tT-PQ", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/Im0AljfT3nvbU_j0", "8006", "054123450000130201", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/IQuGp9FdO", "8006", "054123450000130201", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8006/054123450000130201/IQuGp9FdORNoBLG-nvPe2p_Ho", "8006", "054123450000130201", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8010/0541234537290A41%23GH33/gBGmLt9I1", "8010", "0541234537290A41#GH33", "8011", "6639047221", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8017/817019610850151481/gBlz0X5A", "8017", "817019610850151481", "8019", "4003812", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/8018/411369833821910265/gBlz0X5A", "8018", "411369833821910265", "8019", "4003812", "", "", "", "", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromAPartiallyCompressedDigitalLink(string partiallyCompressedDigitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("partiallyCompressedDigitalLink", partiallyCompressedDigitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a partially compressed Digital Link", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 164
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 165
  await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", partiallyCompressedDigitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 166
  await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table61 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table61.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table61.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table61.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table61.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 167
  await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table61, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a partially compressed Digital Link with short names")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a partially compressed Digital Link with short names")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/EEarwSM", "01", "05412345000013", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/EEarwSMhC4an0V04", "01", "05412345000013", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/EEarwSMhC4an0V05E2gEsb6e897an8eg", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/EEarwSMibQCWN9Pee9tT-PQ", "01", "05412345000013", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/I1j3FSNWcOGeFywaR5CZm", "01", "05412345000013", "235", "8TFV883a904GH&3", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/Im0AljfT3nvbU_j0", "01", "05412345000013", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/IQuGp9FdO", "01", "05412345000013", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gtin/05412345000013/IQuGp9FdORNoBLG-nvPe2p_Ho", "01", "05412345000013", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gln/5060917510004/cEBWUKu", "414", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gln/5060917510004/JUa0T-eifdtOO9Q", "414", "5060917510004", "254", "RP56J920471", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/party/5060917510004/cEBWUKu", "417", "5060917510004", "7040", "5KFX", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/giai/0541234537290A41%26GHpp33/cEB2Cqi", "8004", "0541234537290A41&GHpp33", "7040", "7BVR", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/EEarwSM", "8006", "054123450000130201", "10", "ABC123", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/EEarwSMhC4an0V04", "8006", "054123450000130201", "10", "ABC123", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/EEarwSMhC4an0V05E2gEsb6e897an8eg", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "21", "72292641703", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/EEarwSMibQCWN9Pee9tT-PQ", "8006", "054123450000130201", "22", "AJY3095721P49", "10", "ABC123", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/Im0AljfT3nvbU_j0", "8006", "054123450000130201", "22", "AJY3095721P49", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/IQuGp9FdO", "8006", "054123450000130201", "21", "72292641703", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/itip/054123450000130201/IQuGp9FdORNoBLG-nvPe2p_Ho", "8006", "054123450000130201", "22", "AJY3095721P49", "21", "72292641703", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/cpid/0541234537290A41%23GH33/gBGmLt9I1", "8010", "0541234537290A41#GH33", "8011", "6639047221", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrnp/817019610850151481/gBlz0X5A", "8017", "817019610850151481", "8019", "4003812", "", "", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/gsrn/411369833821910265/gBlz0X5A", "8018", "411369833821910265", "8019", "4003812", "", "", "", "", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromAPartiallyCompressedDigitalLinkWithShortNames(string partiallyCompressedDigitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("partiallyCompressedDigitalLink", partiallyCompressedDigitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a partially compressed Digital Link with short names", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 199
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 200
  await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", partiallyCompressedDigitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 201
  await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table62 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table62.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table62.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table62.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table62.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 202
  await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table62, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a compressed Digital Link for medicine unique identif" +
            "iers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a compressed Digital Link for medicine unique identif" +
            "iers")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JGLo3DY", "01", "05412345000013", "10", "ABC123", "17", "290331", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/AQnYUc1gmiCNV4JGLo3DZCFw1Porpw", "01", "05412345000013", "10", "ABC123", "17", "290331", "21", "72292641703", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromACompressedDigitalLinkForMedicineUniqueIdentifiers(string compressedDigitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("compressedDigitalLink", compressedDigitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a compressed Digital Link for medicine unique identif" +
                    "iers", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 235
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 236
  await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", compressedDigitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 237
  await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table63 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table63.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table63.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table63.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table63.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 238
  await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table63, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Extract AIs and values from a partially compressed Digital Link for medicine uniq" +
            "ue identifiers")]
        [Xunit.TraitAttribute("FeatureTitle", "ExtractFromGs1DigitalLink")]
        [Xunit.TraitAttribute("Description", "Extract AIs and values from a partially compressed Digital Link for medicine uniq" +
            "ue identifiers")]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSMXRuGw", "01", "05412345000013", "10", "ABC123", "17", "290331", "", "", new string[0])]
        [Xunit.InlineDataAttribute("https://id.gs1.org/01/05412345000013/EEarwSMXRuGyELhqfRXTg", "01", "05412345000013", "10", "ABC123", "17", "290331", "21", "72292641703", new string[0])]
        public async System.Threading.Tasks.Task ExtractAIsAndValuesFromAPartiallyCompressedDigitalLinkForMedicineUniqueIdentifiers(string partiallyCompressedDigitalLink, string aI1, string value1, string aI2, string value2, string aI3, string value3, string aI4, string value4, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("partiallyCompressedDigitalLink", partiallyCompressedDigitalLink);
            argumentsOfScenario.Add("AI1", aI1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("AI2", aI2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("AI3", aI3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("AI4", aI4);
            argumentsOfScenario.Add("Value4", value4);
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Extract AIs and values from a partially compressed Digital Link for medicine uniq" +
                    "ue identifiers", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 250
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 251
  await testRunner.GivenAsync(string.Format("the following Digital Link URI: \"{0}\"", partiallyCompressedDigitalLink), ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 252
  await testRunner.WhenAsync("I extract AIs and values from the Digital Link", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table64 = new global::Reqnroll.Table(new string[] {
                            "AI",
                            "Value"});
                table64.AddRow(new string[] {
                            string.Format("{0}", aI1),
                            string.Format("{0}", value1)});
                table64.AddRow(new string[] {
                            string.Format("{0}", aI2),
                            string.Format("{0}", value2)});
                table64.AddRow(new string[] {
                            string.Format("{0}", aI3),
                            string.Format("{0}", value3)});
                table64.AddRow(new string[] {
                            string.Format("{0}", aI4),
                            string.Format("{0}", value4)});
#line 253
  await testRunner.ThenAsync("the data extracted from the Digital Link should contain:", ((string)(null)), table64, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : object, Xunit.IAsyncLifetime
        {
            
            async System.Threading.Tasks.Task Xunit.IAsyncLifetime.InitializeAsync()
            {
                await ExtractFromGs1DigitalLinkFeature.FeatureSetupAsync();
            }
            
            async System.Threading.Tasks.Task Xunit.IAsyncLifetime.DisposeAsync()
            {
                await ExtractFromGs1DigitalLinkFeature.FeatureTearDownAsync();
            }
        }
    }
}
#pragma warning restore
#endregion
